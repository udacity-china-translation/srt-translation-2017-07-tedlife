1
00:00:00,000 --> 00:00:02,290
那么 什么是迭代？

2
00:00:02,290 --> 00:00:06,785
可能 描述它的最好方法是通过看一个普通的 for 循环

3
00:00:06,785 --> 00:00:08,039
当你编写一个 for 循环

4
00:00:08,039 --> 00:00:10,319
你要给此循环提供一个变量

5
00:00:10,320 --> 00:00:13,290
此变量通常为字母 i 因为它

6
00:00:13,289 --> 00:00:16,890
被用作迭代器 来跟踪你在循环中的位置

7
00:00:16,890 --> 00:00:19,820
当你循环数组时

8
00:00:19,820 --> 00:00:22,143
此迭代器会像索引一样

9
00:00:22,143 --> 00:00:26,005
让你一个接一个访问数组中的每个项

10
00:00:26,004 --> 00:00:29,608
这种逐个获取项的过程就叫迭代

11
00:00:29,609 --> 00:00:31,590
我们已经使用它很长时间了

12
00:00:31,589 --> 00:00:33,113
那么为什么要在这里提起呢？

13
00:00:33,113 --> 00:00:35,866
听起来迭代一直都是 JavaScript 的一部分

14
00:00:35,866 --> 00:00:37,919
ES6 中有什么新的变化吗？

15
00:00:37,920 --> 00:00:39,954
的确有一些

16
00:00:39,954 --> 00:00:42,239
第一 添加了一个新的可迭代接口

17
00:00:42,240 --> 00:00:45,190
它允许我们自定义对象的迭代方式

18
00:00:45,189 --> 00:00:47,434
基本上来说 就是它们循环遍历的方式

19
00:00:47,435 --> 00:00:51,770
在第三课中讲符号时 我们会更详细地说明

20
00:00:51,770 --> 00:00:54,086
第二 添加了一个新循环

21
00:00:54,085 --> 00:00:56,174
叫做 for...of 循环

22
00:00:56,174 --> 00:01:00,179
它专门遍历可迭代对象

23
00:01:00,179 --> 00:01:01,844
我说的可迭代对象

24
00:01:01,844 --> 00:01:05,939
是指实现了这个新的可迭代接口的对象

25
00:01:05,939 --> 00:01:08,780
看到这里的 for 和 of 了吧

26
00:01:08,780 --> 00:01:10,769
你可能听得有点糊涂

27
00:01:10,769 --> 00:01:14,988
那么我们退一步 看一些传统 for 循环

28
00:01:14,989 --> 00:01:17,399
的代码示例 然后看看新的 for...of

29
00:01:17,399 --> 00:01:20,070
如何脱颖而出 成为你的最佳的循环选择

